//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WarehouseClient.WarehouseServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WarehouseServiceReference.IWarehouseService")]
    public interface IWarehouseService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWarehouseService/GetHangars", ReplyAction="http://tempuri.org/IWarehouseService/GetHangarsResponse")]
        WcfService.hangar[] GetHangars();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWarehouseService/GetHangars", ReplyAction="http://tempuri.org/IWarehouseService/GetHangarsResponse")]
        System.Threading.Tasks.Task<WcfService.hangar[]> GetHangarsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWarehouseService/UpdateHangar", ReplyAction="http://tempuri.org/IWarehouseService/UpdateHangarResponse")]
        void UpdateHangar(WcfService.hangar h);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWarehouseService/UpdateHangar", ReplyAction="http://tempuri.org/IWarehouseService/UpdateHangarResponse")]
        System.Threading.Tasks.Task UpdateHangarAsync(WcfService.hangar h);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWarehouseService/Add", ReplyAction="http://tempuri.org/IWarehouseService/AddResponse")]
        int Add(int n1, int n2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWarehouseService/Add", ReplyAction="http://tempuri.org/IWarehouseService/AddResponse")]
        System.Threading.Tasks.Task<int> AddAsync(int n1, int n2);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IWarehouseServiceChannel : WarehouseClient.WarehouseServiceReference.IWarehouseService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WarehouseServiceClient : System.ServiceModel.ClientBase<WarehouseClient.WarehouseServiceReference.IWarehouseService>, WarehouseClient.WarehouseServiceReference.IWarehouseService {
        
        public WarehouseServiceClient() {
        }
        
        public WarehouseServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WarehouseServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WarehouseServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WarehouseServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public WcfService.hangar[] GetHangars() {
            return base.Channel.GetHangars();
        }
        
        public System.Threading.Tasks.Task<WcfService.hangar[]> GetHangarsAsync() {
            return base.Channel.GetHangarsAsync();
        }
        
        public void UpdateHangar(WcfService.hangar h) {
            base.Channel.UpdateHangar(h);
        }
        
        public System.Threading.Tasks.Task UpdateHangarAsync(WcfService.hangar h) {
            return base.Channel.UpdateHangarAsync(h);
        }
        
        public int Add(int n1, int n2) {
            return base.Channel.Add(n1, n2);
        }
        
        public System.Threading.Tasks.Task<int> AddAsync(int n1, int n2) {
            return base.Channel.AddAsync(n1, n2);
        }
    }
}
