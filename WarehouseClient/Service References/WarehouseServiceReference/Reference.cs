//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WarehouseClient.WarehouseServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Hangar", Namespace="http://schemas.datacontract.org/2004/07/WarehouseData")]
    [System.SerializableAttribute()]
    public partial class Hangar : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WarehouseClient.WarehouseServiceReference.Area AreaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AreaIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MaxContainersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PlacedContainersField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WarehouseClient.WarehouseServiceReference.Area Area {
            get {
                return this.AreaField;
            }
            set {
                if ((object.ReferenceEquals(this.AreaField, value) != true)) {
                    this.AreaField = value;
                    this.RaisePropertyChanged("Area");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AreaId {
            get {
                return this.AreaIdField;
            }
            set {
                if ((object.ReferenceEquals(this.AreaIdField, value) != true)) {
                    this.AreaIdField = value;
                    this.RaisePropertyChanged("AreaId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaxContainers {
            get {
                return this.MaxContainersField;
            }
            set {
                if ((this.MaxContainersField.Equals(value) != true)) {
                    this.MaxContainersField = value;
                    this.RaisePropertyChanged("MaxContainers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PlacedContainers {
            get {
                return this.PlacedContainersField;
            }
            set {
                if ((this.PlacedContainersField.Equals(value) != true)) {
                    this.PlacedContainersField = value;
                    this.RaisePropertyChanged("PlacedContainers");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Area", Namespace="http://schemas.datacontract.org/2004/07/WarehouseData")]
    [System.SerializableAttribute()]
    public partial class Area : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WarehouseClient.WarehouseServiceReference.Hangar[] HangarsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WarehouseClient.WarehouseServiceReference.Hangar[] Hangars {
            get {
                return this.HangarsField;
            }
            set {
                if ((object.ReferenceEquals(this.HangarsField, value) != true)) {
                    this.HangarsField = value;
                    this.RaisePropertyChanged("Hangars");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WarehouseServiceReference.IWarehouseService")]
    public interface IWarehouseService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWarehouseService/GetAllHangars", ReplyAction="http://tempuri.org/IWarehouseService/GetAllHangarsResponse")]
        WarehouseClient.WarehouseServiceReference.Hangar[] GetAllHangars();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWarehouseService/GetAllHangars", ReplyAction="http://tempuri.org/IWarehouseService/GetAllHangarsResponse")]
        System.Threading.Tasks.Task<WarehouseClient.WarehouseServiceReference.Hangar[]> GetAllHangarsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWarehouseService/Free", ReplyAction="http://tempuri.org/IWarehouseService/FreeResponse")]
        void Free(string num, string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWarehouseService/Free", ReplyAction="http://tempuri.org/IWarehouseService/FreeResponse")]
        System.Threading.Tasks.Task FreeAsync(string num, string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWarehouseService/Store", ReplyAction="http://tempuri.org/IWarehouseService/StoreResponse")]
        void Store(string num);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWarehouseService/Store", ReplyAction="http://tempuri.org/IWarehouseService/StoreResponse")]
        System.Threading.Tasks.Task StoreAsync(string num);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IWarehouseServiceChannel : WarehouseClient.WarehouseServiceReference.IWarehouseService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WarehouseServiceClient : System.ServiceModel.ClientBase<WarehouseClient.WarehouseServiceReference.IWarehouseService>, WarehouseClient.WarehouseServiceReference.IWarehouseService {
        
        public WarehouseServiceClient() {
        }
        
        public WarehouseServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WarehouseServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WarehouseServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WarehouseServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public WarehouseClient.WarehouseServiceReference.Hangar[] GetAllHangars() {
            return base.Channel.GetAllHangars();
        }
        
        public System.Threading.Tasks.Task<WarehouseClient.WarehouseServiceReference.Hangar[]> GetAllHangarsAsync() {
            return base.Channel.GetAllHangarsAsync();
        }
        
        public void Free(string num, string id) {
            base.Channel.Free(num, id);
        }
        
        public System.Threading.Tasks.Task FreeAsync(string num, string id) {
            return base.Channel.FreeAsync(num, id);
        }
        
        public void Store(string num) {
            base.Channel.Store(num);
        }
        
        public System.Threading.Tasks.Task StoreAsync(string num) {
            return base.Channel.StoreAsync(num);
        }
    }
}
